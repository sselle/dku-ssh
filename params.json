{
  "dashboardAuthorizations": {
    "allAuthorized": false,
    "authorizations": [
      {
        "objectRef": {
          "objectId": "Asset_new_informations_scored",
          "objectType": "DATASET"
        },
        "modes": [
          "READ"
        ]
      },
      {
        "objectRef": {
          "objectId": "",
          "objectType": "DATASET"
        },
        "modes": [
          "READ"
        ]
      },
      {
        "objectRef": {
          "objectId": "Assets_at_high_priority",
          "objectType": "DATASET"
        },
        "modes": [
          "READ"
        ]
      },
      {
        "objectRef": {
          "objectId": "Assets_at_risk",
          "objectType": "DATASET"
        },
        "modes": [
          "READ"
        ]
      }
    ]
  },
  "exposedObjects": {
    "objects": []
  },
  "projectType": "REGULAR",
  "projectAppType": "REGULAR",
  "owner": "admin",
  "permissionsVersion": "LEGACY",
  "permissions": [],
  "additionalDashboardUsers": {
    "users": []
  },
  "tutorialProject": true,
  "tutorialId": "DKU_PREDICTIVE_MAINTENANCE",
  "settings": {
    "flowAnchorSourcesAndSinks": true,
    "flowDisplaySettings": {
      "zonesGraphRenderingAlgorithm": "DOT_OLDRANK",
      "zonesGraphConnectZones": true
    },
    "gitCommitMode": "AUTO",
    "disableAutomaticTriggers": false,
    "integrations": {
      "integrations": []
    },
    "flowBuildSettings": {
      "mergeSparkPipelines": false,
      "pruneBeforeSparkPipelines": false,
      "mergeSqlPipelines": false,
      "pruneBeforeSqlPipelines": true
    },
    "limitsSettings": {
      "memSampleBytes": {
        "soft": -1,
        "hard": -1
      },
      "shakerMemTableBytes": {
        "soft": -1,
        "hard": -1
      },
      "attachmentBytes": {
        "soft": -1,
        "hard": -1
      }
    },
    "relocationSettings": {
      "sqlLikeRecipesInitializationMode": "RESOLVED_TABLE_REFERENCES"
    },
    "recipeEnginesPreferences": {
      "forbiddenEngines": [],
      "enginesPreferenceOrder": [],
      "forbiddenByRecipeType": {},
      "preferenceByRecipeType": {}
    },
    "codeEnvs": {
      "python": {
        "mode": "INHERIT",
        "preventOverride": false
      },
      "r": {
        "mode": "INHERIT",
        "preventOverride": false
      },
      "julia": {
        "mode": "INHERIT",
        "preventOverride": false
      }
    },
    "container": {
      "containerMode": "NONE"
    },
    "datasetsCreationSettings": {
      "useGlobal": true,
      "preferedStorageFormats": "CSV_ESCAPING_NOGZIP_FORHIVE,CSV_EXCEL_GZIP,PARQUET_HIVE",
      "virtualizable": false,
      "allowUploadsWithoutConnection": true
    },
    "hiveEngineCreationSettings": {
      "useGlobal": true,
      "executionEngine": "HIVECLI_LOCAL"
    },
    "sparkEngineCreationSettings": {
      "useGlobal": true,
      "executionEngine": "SPARK_SUBMIT",
      "useGlobalMetastore": false
    },
    "impalaEngineCreationSettings": {
      "useGlobal": true,
      "streamMode": true
    },
    "wikiSettings": {
      "promoted": false
    },
    "cluster": {
      "clusterMode": "INHERIT"
    },
    "k8sCluster": {
      "clusterMode": "INHERIT"
    },
    "virtualWebAppBackendSettings": {
      "mode": "INHERIT",
      "preventOverride": false,
      "infra": {
        "containerSelection": {
          "containerMode": "INHERIT"
        },
        "overrideGlobalK8sExposition": false,
        "exposition": {
          "type": "local_process",
          "params": {}
        },
        "scaling": {
          "initialReplicas": 1,
          "hpa": false,
          "hpaTargetCPUPercent": 0,
          "hpaMetrics": [],
          "hpaMinPods": 0,
          "hpaMaxPods": 0,
          "hpaAnnotations": []
        },
        "deploymentModifier": {}
      }
    }
  },
  "name": "Predictive maintenance for Administrator",
  "projectStatus": "Sandbox",
  "imgPattern": 5,
  "metrics": {
    "probes": [],
    "engineConfig": {
      "padRunsWithMetrics": false,
      "hive": {
        "active": true,
        "extraConf": []
      },
      "basic": {},
      "dss": {
        "active": true,
        "selection": {
          "useMemTable": false,
          "filter": {
            "distinct": false,
            "enabled": false
          },
          "partitionSelectionMethod": "ALL",
          "latestPartitionsN": 1,
          "ordering": {
            "enabled": false,
            "rules": []
          },
          "samplingMethod": "FULL",
          "maxRecords": -1,
          "targetRatio": 0.02,
          "withinFirstN": -1,
          "maxReadUncompressedBytes": -1
        }
      },
      "sql": {
        "active": true
      },
      "impala": {
        "active": true
      },
      "spark": {
        "active": true,
        "extraConf": []
      },
      "python": {}
    },
    "displayedState": {
      "columns": [],
      "metrics": []
    }
  },
  "metricsChecks": {
    "runOnBuild": false,
    "checks": [],
    "displayedState": {
      "checks": []
    }
  },
  "versionTag": {
    "versionNumber": 36,
    "lastModifiedBy": {
      "login": "admin"
    },
    "lastModifiedOn": 1643725185565
  },
  "description": "##Replacing cars before they break down\n\nI am data scientist at a large car-rental company. To make sure our clients don\u0027t rent out cars that could break down, we replace the cars that we believe are likely to have technical problems regularly. But we don\u0027t want to replace them too often either, to limit cost. Part of our business is optimising that balance.\n\n\u003cbr/\u003eI recently noticed that 3 months ago more of our cars had technical issues than usual. Last August, an unusual proportion of our cars had a problem with the transmission.\n\n\u003cbr/\u003eWe had collected data about the cars that where affected by this problem of course, and how these cars had been used in the months before they broke.\n\n\u003cbr/\u003eAs you can imagine, our goal was to identify the reasons for this problem and find out how to prevent it from happening again in the next months.\n\n\u003cbr\u003e\n\n# BUSINESS GOALS\n\n1.  Understand why cars are having technical problems at a higher rate\n2.  Identify the cars with the highest probability of having the same problem in the future\n\n\n\u003cbr/\u003e\n#HOW DID WE DO THIS?\n\nWe gathered data to solve those two goals:\n   - measures taken during the various failures (august)\n   - data about how cars had been used in the weeks before their incidents (june \u0026 july)\n   - information from the maintenance department (june \u0026 july)\n\u003cbr/\u003e\n\u003cbr/\u003eWe followed 4 steps to go from that raw data to achieving our business goals, and preventing the next failures:\n\n\u003cstrong\u003eStep 1: Explore and prepare the data:\u003c/strong\u003e We made several transformations to the raw data so we could get valuable information from it. Typically, we transformed that data to create a new dataset aggregated at the car level, with as many relevant features as possible about each vehicle.\n\u003cbr/\u003e\n\u003cbr/\u003e\u003cstrong\u003eStep 2: Create the model:\u003c/strong\u003e DSS trained a model to predict the feature we wanted to understand (failure or not failure), using the historical data we computed in the previous step.\n\u003cbr/\u003e\n\u003cbr/\u003e\u003cstrong\u003eStep 3: Apply the model to the new data:\u003c/strong\u003e We deployed the model to have the probability that each car would have the same failure in the next few months\n\u003cbr/\u003e\n\u003cbr/\u003e\u003cstrong\u003eStep 4: Make a decision:\u003c/strong\u003e Knowing the probability of failure, we identified two groups of cars: the cars we had to check in the 2 next days because they were most likely to have issues, and the cars that we could wait a few extra days to check.\n\n\n\u003cbr/\u003e\n#EXPLORE THE SAMPLE PROJECT\n\n1. Look at the flow to retrace the different steps of data preparation (recipe icons in yellow) and machine learning (in green) that were needed to score each car. Check out the different input datasets to get familiar with our raw data.\n\u003cp class\u003d\"text-center\"\u003e\n\u003ca href\u003d\"/projects/DKU_PREDICTIVE_MAINTENANCE/flow/\"  class\u003d\"btn btn-datasets-color btn-cta-big-mod\"\u003e\u003ci class\u003d\"icon-dku-sample_project\" class\u003d\"btn-cta-big-mod-icon\" /\u003eFlow\u003c/a\u003e\u003cbr/\u003e\u003cbr/\u003e\n\u003c/p\u003e\n\n2. See how we build a group recipe to reformat our usage data, to aggregate data at the vehicle level (instead of our original log format):\n\u003cp class\u003d\"text-center\"\u003e\n\u003ca href\u003d\"/projects/DKU_PREDICTIVE_MAINTENANCE/recipes/group_usage_data/\"  class\u003d\"btn btn-datasets-color btn-cta-big-mod\"\u003e\u003ci class\u003d\"icon-dku-sample_project\" class\u003d\"btn-cta-big-mod-icon\" /\u003eGroup recipe\u003c/a\u003e\u003cbr/\u003e\u003cbr/\u003e\n\u003c/p\u003e\n\n3. See the different steps of our data preparation script on that usage data, to create new features thanks to the visual editor: \n\u003cp class\u003d\"text-center\"\u003e\n\u003ca href\u003d\"/projects/DKU_PREDICTIVE_MAINTENANCE/recipes/compute_usage_data_by_Asset_prepared/\"  class\u003d\"btn btn-datasets-color btn-cta-big-mod\"\u003e\u003ci class\u003d\"icon-dku-sample_project\" class\u003d\"btn-cta-big-mod-icon\" /\u003eVisual analysis\u003c/a\u003e\u003cbr/\u003e\u003cbr/\u003e\n\u003c/p\u003e\n   \n4. See the preparation of our maintenance consumption data, with a good example of how use the pivot function! \n\u003cp class\u003d\"text-center\"\u003e\n\u003ca href\u003d\"/projects/DKU_PREDICTIVE_MAINTENANCE/recipes/compute_maintenance_part_consumption_prepared/\"  class\u003d\"btn btn-datasets-color btn-cta-big-mod\"\u003e\u003ci class\u003d\"icon-dku-sample_project\" class\u003d\"btn-cta-big-mod-icon\" /\u003eVisual analysis\u003c/a\u003e\u003cbr/\u003e\u003cbr/\u003e\n\u003c/p\u003e\n   \n5. Now check out how we combine all of our data sources to get all of the information we created in a single dataset, thanks to a join recipe:  \n\u003cp class\u003d\"text-center\"\u003e\n\u003ca href\u003d\"/projects/DKU_PREDICTIVE_MAINTENANCE/recipes/join_maintenance_failures/\"  class\u003d\"btn btn-datasets-color btn-cta-big-mod\"\u003e\u003ci class\u003d\"icon-dku-sample_project\" class\u003d\"btn-cta-big-mod-icon\" /\u003eJoin recipe\u003c/a\u003e\u003cbr/\u003e\u003cbr/\u003e\n\u003c/p\u003e\n   \n6. Machine learning, finally! DSS trained different types of models and compared their performance, so we could deploy our favorite one. All this, in just  few clicks in the visual modelling interface:\n\u003cp class\u003d\"text-center\"\u003e\n\u003ca href\u003d\"/projects/DKU_PREDICTIVE_MAINTENANCE/analysis/7dowYOoy/ml/p/lOFOPArz/list/results#learning.sessions\"  class\u003d\"btn btn-datasets-color btn-cta-big-mod\"\u003e\u003ci class\u003d\"icon-dku-sample_project\" class\u003d\"btn-cta-big-mod-icon\" /\u003eMODELS\u003c/a\u003e\u003cbr/\u003e\u003cbr/\u003e\n\u003c/p\u003e\n   \n7. After we deployed our model on our new data, which created a new feature with our prediction, we made the result more practical by splitting the resulting dataset in the cars we needed to fix RIGHT NOW and the ones that could wait a little.\n\u003cp class\u003d\"text-center\"\u003e\n\u003ca href\u003d\"/projects/DKU_PREDICTIVE_MAINTENANCE/recipes/split_Asset_new_informations_scored/\"  class\u003d\"btn btn-datasets-color btn-cta-big-mod\"\u003e\u003ci class\u003d\"icon-dku-sample_project\" class\u003d\"btn-cta-big-mod-icon\" /\u003eSplit recipe\u003c/a\u003e\u003cbr/\u003e\u003cbr/\u003e\n\u003c/p\u003e\n\nAnd that\u0027s all it took us. No, really though.\n\n\n#RELATED CONTENT\n\nIf you want to look into some other projects or articles related to this sample project, have a look at our [self-learning content](https://academy.dataiku.com/latest/index.html) or our [reference documentation](http://doc.dataiku.com/dss/latest/)\n \n",
  "shortDesc": "Identifying which vehicle is most likely to break down",
  "tags": [
    "visual recipe",
    "dashboarding",
    "sample",
    "gallery",
    "downloads",
    "section:Basics"
  ],
  "customFields": {},
  "checklists": {
    "checklists": []
  }
}